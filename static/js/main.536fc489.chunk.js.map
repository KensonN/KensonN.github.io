{"version":3,"sources":["components/Header.js","components/TypedName.js","components/About.js","components/ProjectCard.js","components/constants.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["Header","classes","this","props","AppBar","position","className","appBar","Toolbar","Typography","typographyStyles","IconButton","href","aria-label","GitHub","LinkedIn","Button","React","Component","withStyles","flex","background","TypedName","typed","Typed","strings","typeSpeed","backSpeed","loop","cursorChar","backDelay","destroy","container","Grid","nameContainer","align","alignItems","item","xs","variant","name","nameBody","theme","height","backgroundImage","backdropFilter","breakpoints","up","fontSize","About","profileContainer","md","src","alt","profilePic","paragraph","themes","width","borderRadius","fontWeight","paddingTop","textAlign","ProjectCard","title","skills","description","imgPath","date","link","Card","root","CardActionArea","CardMedia","media","image","CardContent","gutterBottom","color","caption","maxWidth","backgroundColor","fontStyle","Projects","Container","spacing","projectList","map","projectObj","getProjects","Copyright","Link","Date","getFullYear","App","Paper","square","direction","copyright","overflowY","padding","Boolean","window","location","hostname","match","createMuiTheme","palette","type","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wXAaMA,E,uKAEM,IACDC,EAAWC,KAAKC,MAAhBF,QAEP,OACE,kBAACG,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWL,EAAQM,QAC3C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYH,UAAWL,EAAQS,kBAA/B,iBAGA,kBAACC,EAAA,EAAD,CAAYC,KAAM,8BAA+BC,aAAW,kBAC1D,kBAACC,EAAA,EAAD,OAEF,kBAACH,EAAA,EAAD,CAAYC,KAAK,4CAA4CC,aAAW,oBACtE,kBAACE,EAAA,EAAD,OAEF,kBAACC,EAAA,EAAD,CAAQJ,KAb8B,mBAatC,mB,GAjBWK,IAAMC,WA0BZC,cAnCA,CACbT,iBAAkB,CAChBU,KAAM,GAERb,OAAQ,CACNc,WAAY,gBA8BDF,CAAmBnB,G,yBChB5BsB,E,kLAUEpB,KAAKqB,MAAQ,IAAIC,IAAM,QARP,CACdC,QAAS,CAAC,sBAAuB,gBACjCC,UAAW,GACXC,UAAW,GACXC,MAAM,EACNC,WAAY,IACZC,UAAW,Q,6CAKb5B,KAAKqB,MAAMQ,Y,+BAGL,IACC9B,EAAWC,KAAKC,MAAhBF,QACP,OACI,yBAAKK,UAAWL,EAAQ+B,WACpB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAAC1B,UAAWL,EAAQiC,cAAeC,MAAO,SAAUC,WAAY,UAC3E,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAAC7B,EAAA,EAAD,CAAY8B,QAAQ,KAAKjC,UAAWL,EAAQuC,MACxC,yBAAKlC,UAAWL,EAAQwC,UACpB,0BAAMnC,UAAU,kB,GAxBxBW,IAAMC,WAkCfC,eAlDA,SAAAuB,GAAK,MAAK,CACrBV,UAAW,CACPW,OAAQ,QACRC,gBAAiB,gCAErBV,cAAe,CACXS,OAAQ,OACRE,eAAgB,mBAEpBL,KAAK,eACAE,EAAMI,YAAYC,GAAG,MAAQ,CAC1BC,SAAU,aAuCP7B,CAAmBG,GCpC5B2B,E,uKACQ,IACChD,EAAWC,KAAKC,MAAhBF,QACP,OACI,kBAACgC,EAAA,EAAD,CAAMD,WAAS,EAAC1B,UAAWL,EAAQiD,iBAAkBd,WAAY,UAC7D,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGa,GAAI,IAEtB,kBAAClB,EAAA,EAAD,CAAMI,MAAI,EAACc,GAAI,EAAGhB,MAAO,SAAUG,GAAI,IACnC,yBAAKc,IA1BoB,sBA0BFC,IAAK,UAAW/C,UAAWL,EAAQqD,cAE9D,kBAACrB,EAAA,EAAD,CAAMI,MAAI,EAACc,GAAI,EAAGhB,MAAO,SAAUG,GAAI,IACnC,kBAAC7B,EAAA,EAAD,CAAY8B,QAAS,MAArB,YAGA,kBAAC9B,EAAA,EAAD,CAAY8B,QAAS,KAAMjC,UAAWL,EAAQsD,WAA9C,2WAIJ,kBAACtB,EAAA,EAAD,CAAMI,MAAI,EAACc,GAAI,EAAGb,GAAI,S,GAlBlBrB,IAAMC,WA0BXC,eA1CA,SAAAqC,GAAM,MAAK,CACtBF,WAAY,CACRG,MAAO,OACPd,OAAQ,OACRe,aAAc,OAElBH,UAAW,CACPI,WAAY,SACZC,WAAY,KACZC,UAAW,WAEfX,iBAAkB,CACdU,WAAY,SA8BLzC,CAAmB8B,G,wCC3B5Ba,E,uKACQ,IAAD,EAC8D5D,KAAKC,MAAjEF,EADF,EACEA,QAAS8D,EADX,EACWA,MAAOC,EADlB,EACkBA,OAAQC,EAD1B,EAC0BA,YAAaC,EADvC,EACuCA,QAASC,EADhD,EACgDA,KADhD,EACsDC,KAE3D,OACI,kBAACC,EAAA,EAAD,CAAM/D,UAAWL,EAAQqE,MACrB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACAlE,UAAWL,EAAQwE,MACnBC,MAAiC,YAAcR,EAC/CH,MAAM,0BAEN,kBAACY,EAAA,EAAD,KACI,kBAAClE,EAAA,EAAD,CAAYmE,cAAY,EAACrC,QAAQ,MAC5BwB,GAEL,kBAACtD,EAAA,EAAD,CAAYmE,cAAY,EAACrC,QAAQ,KAAKjC,UAAWL,EAAQsD,WACpDS,GAEL,kBAACvD,EAAA,EAAD,CAAY8B,QAAQ,KAAKsC,MAAM,gBAAgBvE,UAAWL,EAAQsD,WAC7DU,GAEL,kBAACxD,EAAA,EAAD,CAAYmE,cAAY,EAACrC,QAAQ,UAAUjC,UAAWL,EAAQ6E,SACzDX,U,GAvBHlD,IAAMC,WAgCjBC,eAjDA,SAAAuB,GAAK,MAAK,CACrB4B,KAAM,CACFS,SAAU,QACVC,gBAAiB,WAEnBP,MAAO,CACL9B,OAAQ,SAEVY,UAAW,CACPI,WAAY,UAEhBmB,QAAS,CACLG,UAAW,SACX9C,MAAO,YAoCFhB,CAAmB2C,GCpDnB,GACX,CACIC,MAAO,+BACPC,OAAQ,iDACRC,YAAa,wkBACbC,QAAS,WACTC,KAAM,0BAEV,CACIJ,MAAO,oCACPC,OAAQ,eACRC,YAAa,2hBACbC,QAAS,cACTC,KAAM,oBAEV,CACIJ,MAAO,yCACPC,OAAQ,MACRC,YAAa,waACbC,QAAS,aACTC,KAAM,iBAEV,CACIJ,MAAO,mBACPC,OAAQ,2BACRC,YAAa,qQACbC,QAAS,UACTC,KAAM,oBChBRe,E,uKAEE,IAMOjF,EAAWC,KAAKC,MAAhBF,QACP,OACI,kBAACkF,EAAA,EAAD,CAAWJ,UAAU,GACjB,kBAAC9C,EAAA,EAAD,CAAMD,WAAS,EAACG,MAAO,SAAsC7B,UAAWL,EAAQ+B,UAAWoD,QAAS,GAChG,kBAACnD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAAC7B,EAAA,EAAD,CAAYmE,cAAY,EAACrC,QAAS,MAAlC,aAIH8C,EAAYC,KAAI,SAAAC,GAAU,OAfnB,SAACA,GACjB,OACA,kBAACtD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIa,GAAI,GACnB,kBAAC,EAAgBoC,IAYkBC,CAAYD,Y,GAjBxCtE,IAAMC,WAyBdC,cA/BA,CACXa,UAAW,CACP4B,WAAY,OA6BLzC,CAAmB+D,GChBlC,SAASO,IACP,OACE,6BACE,kBAAChF,EAAA,EAAD,CAAY8B,QAAQ,QAAQsC,MAAM,gBAAgB1C,MAAM,UACvD,kBACD,kBAACuD,EAAA,EAAD,CAAMb,MAAM,UAAUjE,KAAK,4BAA3B,iBAEQ,KACP,IAAI+E,MAAOC,cACX,M,IAODC,E,uKACM,IACD5F,EAAWC,KAAKC,MAAhBF,QACP,OACA,kBAAC6F,EAAA,EAAD,CAAOxF,UAAWL,EAAQqE,KAAMyB,QAAQ,GACpC,kBAAC9D,EAAA,EAAD,CAAMD,WAAS,EAACgE,UAAW,OACzB,kBAAC/D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,OAEF,kBAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,OAEF,kBAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,OAEF,kBAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,QAGJ,yBAAKhC,UAAWL,EAAQgG,WACrB,kBAACR,EAAD,Y,GApBOxE,IAAMC,WA2BTC,eAvDA,SAAAuB,GAAK,MAAK,CACvB4B,KAAM,CACJ3B,OAAQ,OACRc,MAAO,OACPpD,SAAU,QACV6F,UAAW,QAEbD,UAAW,CACTE,QAAS,sBA+CEhF,CAAmB0E,GCnDdO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCXA9D,EAAQ+D,YAAe,CAC3BC,QAAS,CACPC,KAAM,UAIVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAA,EAAD,CAAerE,MAAOA,GAClB,kBAAC,EAAD,QAGNsE,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.536fc489.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, Button, IconButton, withStyles } from \"@material-ui/core\";\r\nimport {GitHub, LinkedIn} from \"@material-ui/icons\"\r\n\r\nconst styles = {\r\n  typographyStyles: {\r\n    flex: 1,\r\n  },\r\n  appBar: {\r\n    background: \"transparent\",\r\n  }\r\n};\r\n\r\nclass Header extends React.Component {\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    const resumePath = process.env.PUBLIC_URL + \"/Resume 8-3.pdf\";\r\n    return (\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography className={classes.typographyStyles}>\r\n            Kenson Nguyen\r\n          </Typography>\r\n          <IconButton href={\"https://github.com/KensonN/\"} aria-label=\"Link to GitHub\">\r\n            <GitHub />\r\n          </IconButton> \r\n          <IconButton href=\"https://www.linkedin.com/in/kensonnguyen/\" aria-label=\"Link to LinkedIn\">\r\n            <LinkedIn />\r\n          </IconButton>\r\n          <Button href={resumePath}>\r\n            Resum√©\r\n          </Button>          \r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport { Grid, Typography, withStyles } from \"@material-ui/core\";\r\nimport Typed from 'typed.js'\r\n\r\nconst backgroundPath = process.env.PUBLIC_URL + \"/images/VectorPhone.jpg\";\r\n\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        height: \"25rem\",\r\n        backgroundImage: \"url(\" + backgroundPath + \")\",\r\n    },\r\n    nameContainer: {\r\n        height: \"100%\",\r\n        backdropFilter: \"brightness(0.4)\",        \r\n    },\r\n    name: {\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: \"12rem\",\r\n        }\r\n    }\r\n});\r\n  \r\nclass TypedName extends React.Component {\r\n    componentDidMount() {\r\n        const options = {\r\n          strings: [\"Hi,^250 I'm Kenson!\", \"UCLA EE 2023\"],\r\n          typeSpeed: 50,\r\n          backSpeed: 35,\r\n          loop: true,\r\n          cursorChar: \"|\",\r\n          backDelay: 500,\r\n        };\r\n        this.typed = new Typed(\".name\", options);\r\n      }\r\n    componentWillUnmount() {\r\n        this.typed.destroy();\r\n      }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className={classes.container}>\r\n                <Grid container className={classes.nameContainer} align={\"center\"} alignItems={\"center\"}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h1\" className={classes.name}>\r\n                            <div className={classes.nameBody}>\r\n                                <span className=\"name\"/>\r\n                            </div>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TypedName);","import React from \"react\";\r\nimport { Grid, Typography, withStyles } from \"@material-ui/core\"\r\n\r\nconst profilePath = process.env.PUBLIC_URL + \"/images/profile.png\";\r\n\r\nconst styles = themes => ({\r\n    profilePic: {\r\n        width: \"20em\",\r\n        height: \"auto\",\r\n        borderRadius: \"50%\"\r\n    },\r\n    paragraph: {\r\n        fontWeight: \"normal\",\r\n        paddingTop: \"4%\",\r\n        textAlign: \"justify\",\r\n    },\r\n    profileContainer: {\r\n        paddingTop: \"3%\",\r\n    }\r\n});\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <Grid container className={classes.profileContainer} alignItems={\"center\"}>\r\n                <Grid item xs={1} md={1} >\r\n                </Grid>\r\n                <Grid item md={5} align={\"center\"} xs={12} >\r\n                    <img src={profilePath} alt={\"profile\"} className={classes.profilePic} />\r\n                </Grid>\r\n                <Grid item md={3} align={\"center\"} xs={12}>\r\n                    <Typography variant={\"h1\"}>\r\n                        About Me\r\n                    </Typography>\r\n                    <Typography variant={\"h6\"} className={classes.paragraph}>\r\n                        Hey there! I'm a Electrical Engineering sopohmore at UCLA's Henry Samueli School of Engineering. Other than studies, I'm involved with  Bruin Racing SuperMileage Vehicle and IEEE. My interests are always evolving, so I chose to study EE to be in a field with tons of flexibility. Here, I hope to showcase some projects I've worked on. Thanks for stopping by!\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item md={1} xs={1} >\r\n\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(About);","import React from \"react\";\r\nimport {withStyles, Typography, Card, CardActionArea, CardContent, CardMedia, Button} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        maxWidth: \"70rem\",\r\n        backgroundColor: \"#292828\"\r\n      },\r\n      media: {\r\n        height: \"25rem\",\r\n      },\r\n      paragraph: {\r\n          fontWeight: \"normal\",\r\n      },\r\n      caption: {\r\n          fontStyle: \"italic\",\r\n          align: \"right\"\r\n      }\r\n});\r\n\r\nclass ProjectCard extends React.Component {\r\n    render() {\r\n        const {classes, title, skills, description, imgPath, date, link} = this.props;\r\n        const profilePath = process.env.PUBLIC_URL + \"/images/profile.png\";\r\n        return (\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                    className={classes.media}\r\n                    image= {process.env.PUBLIC_URL + \" /images/\" + imgPath}\r\n                    title=\"Contemplative Reptile\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h3\">\r\n                            {title}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\" className={classes.paragraph}>\r\n                            {skills} \r\n                        </Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\" className={classes.paragraph}>\r\n                            {description}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"caption\" className={classes.caption}>\r\n                            {date} \r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ProjectCard);","export default [\r\n    {\r\n        title: \"SMV DAQ System and Dashboard\",\r\n        skills: \"Arduino, LattePanda, Python, ReactJS, Firebase\",\r\n        description: \"I worked with other team members to design a modular data-acquisition system including a variety of sensors such as Hall-Effect and gyroscope to track data on electric car to improve efficiency. Additionally, I designed the interface of the driver dashboard inside the car to display the DAQ data to further improve runs as the driver previously only received information through radio communication. I further iterated on the ground team's dashboard to accommodate for new sensors and improved data display. Both dashboards hosted on one page with a button to toggle between both.\",\r\n        imgPath: \"dash.gif\",\r\n        date: \"January 2020 - Present\"\r\n    },\r\n    {\r\n        title: \"Bluetooth Speaker with RGB Matrix\",\r\n        skills: \"Arduino, C++\",\r\n        description: \"I assembled a speaker using schematics found online. The speaker hardware consisted of two 3.5\\\" tweeters connected to a Bluetooth capable audio board. The speaker included an electret microphone connected to an Arduino Mega to sample the audio of the music being played. The audio sample was then processed and converted into audio-reactive lighting effects. These effects were displayed on the 16x16 individually addressable LED matrix affixed to the front of the speaker enclosure. The enclosure was constructed using plywood and MDF.\",\r\n        imgPath: \"speaker.jpg\",\r\n        date: \"June - July 2018\"\r\n    },\r\n    {\r\n        title: \"Logitech G910 Lighting for Music Shows\",\r\n        skills: \"C++\",\r\n        description: \"As part of junior year project, I learned and wrote a C++ program to control the LEDS on the Logitech G910 keyboard. The keyboard has an individually addressable RGB LED under each key which can be programmed by the Logitech Lighting SDK. I wrote a program that generated lighting effects upon the press of certain keys, inspired by how visual jockeys manually control stage effects and visuals at electronic music shows.\",\r\n        imgPath: \"genius.gif\",\r\n        date: \"February 2017\",\r\n    },\r\n    {\r\n        title: \"Path-sensing Car\",\r\n        skills: \"Arduino, C++, PD control\",\r\n        description: \"As part of an introduction to electrical engineering class, I programmed a car built from the TI RSLK kit to sense and follow a track. The car utilizes a proportional-derivative control scheme and uses an array of IR sensors to detect the line on the ground.\",\r\n        imgPath: \"pid.gif\",\r\n        date: \"May - June 2020\"\r\n    }\r\n]","import React from \"react\";\r\nimport {withStyles, Typography, Grid, Container} from \"@material-ui/core\";\r\nimport ProjectCard from './ProjectCard';\r\nimport projectList from './constants';\r\n\r\nconst styles = {\r\n    container: {\r\n        paddingTop: \"3%\",\r\n    }\r\n};\r\n\r\nclass Projects extends React.Component {\r\n    render() {\r\n        const getProjects = (projectObj) => {\r\n            return (\r\n            <Grid item xs={12} md={6}>\r\n                <ProjectCard {...projectObj} />\r\n            </Grid>\r\n        )}\r\n        const {classes} = this.props;\r\n        return (\r\n            <Container maxWidth={false}>\r\n                <Grid container align={\"center\"} /* alignItems={\"center\"} */ className={classes.container} spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography gutterBottom variant={\"h1\"}>\r\n                            Projects\r\n                        </Typography>\r\n                    </Grid>\r\n                    {projectList.map(projectObj => getProjects(projectObj))}\r\n                </Grid>\r\n            </Container>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Projects);","import React from 'react';\nimport './App.css';\nimport { Grid, withStyles, Paper, Typography, Link } from \"@material-ui/core\";\nimport Header from './components/Header';\nimport TypedName from './components/TypedName';\nimport About from './components/About';\nimport Projects from './components/Projects'\n\nconst styles = theme => ({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    position: \"fixed\",\n    overflowY: \"auto\",\n  },\n  copyright: {\n    padding: \"1.5% 0% 0.5% 0%\",\n  }\n});\n\nfunction Copyright() {\n  return (\n    <div>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright ¬© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Kenson Nguyen\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n    </div>\n    \n  );\n}\n\nclass App extends React.Component {\n  render() {\n    const {classes} = this.props;\n    return (\n    <Paper className={classes.root} square={true}>\n        <Grid container direction={'row'}>\n          <Grid item xs={12}>\n            <Header />\n          </Grid>\n          <Grid item xs={12}>\n            <TypedName />\n          </Grid>\n          <Grid item xs={12}>\n            <About />\n          </Grid>\n          <Grid item xs={12}>\n            <Projects />\n          </Grid>\n        </Grid>\n        <div className={classes.copyright}>\n           <Copyright/>\n        </div>\n    </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, ThemeProvider} from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n        <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}