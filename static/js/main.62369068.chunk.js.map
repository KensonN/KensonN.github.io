{"version":3,"sources":["components/Header.js","components/Typing.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","classes","this","props","AppBar","position","color","Toolbar","Typography","className","typographyStyles","Button","href","buttons","button","React","Component","withStyles","flex","Typing","typed","Typed","strings","typeSpeed","backSpeed","loop","cursorChar","backDelay","destroy","container","Grid","nameContainer","align","alignItems","item","xs","variant","nameBody","theme","height","backgroundImage","backdropFilter","About","md","src","alt","profilePic","paragraph","themes","width","borderRadius","fontWeight","paddingTop","Copyright","Link","Date","getFullYear","App","Paper","root","square","direction","copyright","widht","overflowY","Boolean","window","location","hostname","match","createMuiTheme","palette","type","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+VASMA,E,uKACM,IACDC,EAAWC,KAAKC,MAAhBF,QAEP,OACE,kBAACG,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,WAC9B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,UAAWR,EAAQS,kBAA/B,iBAGA,kBAACC,EAAA,EAAD,CAAQC,KAAM,IAAKH,UAAWR,EAAQY,SAAtC,QASA,kBAACF,EAAA,EAAD,CAAQC,KAAK,4CAA4CH,UAAWR,EAAQa,QAA5E,YAGA,kBAACH,EAAA,EAAD,CAAQC,KAnB8B,kBAmBZH,UAAWR,EAAQa,QAA7C,mB,GAtBWC,IAAMC,WA+BZC,cArCA,CACbP,iBAAkB,CAChBQ,KAAM,IAmCKD,CAAmBjB,G,iBCvB5BmB,E,kLAUEjB,KAAKkB,MAAQ,IAAIC,IAAM,QARP,CACdC,QAAS,CAAC,sBAAuB,gBACjCC,UAAW,GACXC,UAAW,GACXC,MAAM,EACNC,WAAY,IACZC,UAAW,Q,6CAKbzB,KAAKkB,MAAMQ,Y,+BAGL,IACC3B,EAAWC,KAAKC,MAAhBF,QACP,OACI,yBAAKQ,UAAWR,EAAQ4B,WACpB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACpB,UAAWR,EAAQ8B,cAAeC,MAAO,SAAUC,WAAY,UAC3E,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACX,kBAAC3B,EAAA,EAAD,CAAY4B,QAAQ,MAChB,yBAAK3B,UAAWR,EAAQoC,UACpB,0BAAM5B,UAAU,kB,GAxB3BM,IAAMC,WAkCZC,eA7CA,SAAAqB,GAAK,MAAK,CACrBT,UAAW,CACPU,OAAQ,QACRC,gBAAiB,gCAErBT,cAAe,CACXQ,OAAQ,OACRE,eAAgB,sBAsCTxB,CAAmBE,GC/B5BuB,E,uKACQ,IACCzC,EAAWC,KAAKC,MAAhBF,QACP,OACI,kBAAC6B,EAAA,EAAD,CAAMD,WAAS,EAACpB,UAAWR,EAAQ4B,WAC/B,kBAACC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGQ,GAAI,IAEtB,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACS,GAAI,EAAGX,MAAO,SAAUG,GAAI,IACnC,yBAAKS,IAzBkB,sBAyBFC,IAAK,UAAWpC,UAAWR,EAAQ6C,cAE5D,kBAAChB,EAAA,EAAD,CAAMI,MAAI,EAACS,GAAI,EAAGX,MAAO,SAAUG,GAAI,IACnC,kBAAC3B,EAAA,EAAD,CAAY4B,QAAS,MAArB,YAGA,kBAAC5B,EAAA,EAAD,CAAY4B,QAAS,KAAM3B,UAAWR,EAAQ8C,WAA9C,oSAMJ,kBAACjB,EAAA,EAAD,CAAMI,MAAI,EAACS,GAAI,EAAGR,GAAI,S,GApBlBpB,IAAMC,WA4BXC,eA3CA,SAAA+B,GAAM,MAAK,CACtBF,WAAY,CACRG,MAAO,OACPV,OAAQ,OACRW,aAAc,OAElBH,UAAW,CACPI,WAAY,SACZC,WAAY,MAEhBvB,UAAW,CACPuB,WAAY,SAgCLnC,CAAmByB,GC7BlC,SAASW,IACP,OACE,6BACE,kBAAC7C,EAAA,EAAD,CAAY4B,QAAQ,QAAQ9B,MAAM,gBAAgB0B,MAAM,UACvD,kBACD,kBAACsB,EAAA,EAAD,CAAMhD,MAAM,UAAUM,KAAK,4BAA3B,iBAEQ,KACP,IAAI2C,MAAOC,cACX,M,IAODC,E,uKACM,IACDxD,EAAWC,KAAKC,MAAhBF,QACP,OACA,kBAACyD,EAAA,EAAD,CAAOjD,UAAWR,EAAQ0D,KAAMC,QAAQ,GACpC,kBAAC9B,EAAA,EAAD,CAAMD,WAAS,EAACgC,UAAW,OACzB,kBAAC/B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,OAEF,kBAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,OAEF,kBAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,IACb,kBAAC,EAAD,QAGJ,yBAAK1B,UAAWR,EAAQ6D,WACrB,kBAACT,EAAD,Y,GAjBOtC,IAAMC,WAwBTC,eApDA,SAAAqB,GAAK,MAAK,CACvBqB,KAAM,CACJpB,OAAQ,OACRwB,MAAO,OACP1D,SAAU,QACV2D,UAAW,QAEbF,UAAW,CACTV,WAAY,WA4CDnC,CAAmBwC,GC/CdQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCXA/B,EAAQgC,YAAe,CAC3BC,QAAS,CACPC,KAAM,UAIVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAA,EAAD,CAAetC,MAAOA,GAClB,kBAAC,EAAD,QAGNuC,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.62369068.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, Button, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  typographyStyles: {\r\n    flex: 1,\r\n  },\r\n};\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    const {classes} = this.props;\r\n    const resumePath = process.env.PUBLIC_URL + \"/Resume 8-3.pdf\";\r\n    return (\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Typography className={classes.typographyStyles}>\r\n            Kenson Nguyen\r\n          </Typography>\r\n          <Button href={\"#\"} className={classes.buttons}>\r\n            Home\r\n          </Button>\r\n          {/* <Button color={\"inherit\"}>\r\n            About\r\n          </Button> */}\r\n          {/* <Button color={\"inherit\"} className={classes.button}>\r\n            Projects\r\n          </Button> */}\r\n          <Button href=\"https://www.linkedin.com/in/kensonnguyen/\" className={classes.button}>\r\n            Linkedin\r\n          </Button>\r\n          <Button href={resumePath} className={classes.button}>\r\n            Resumé\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport { Grid, Typography, withStyles } from \"@material-ui/core\";\r\nimport Typed from 'typed.js'\r\n\r\nconst imagePath = process.env.PUBLIC_URL + \"/images/VectorPhone.jpg\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        height: \"25rem\",\r\n        backgroundImage: \"url(\" + imagePath + \")\",\r\n    },\r\n    nameContainer: {\r\n        height: \"100%\",\r\n        backdropFilter: \"brightness(0.4)\",        \r\n    },\r\n});\r\n  \r\nclass Typing extends React.Component {\r\n    componentDidMount() {\r\n        const options = {\r\n          strings: [\"Hi,^250 I'm Kenson!\", \"UCLA EE 2023\"],\r\n          typeSpeed: 50,\r\n          backSpeed: 35,\r\n          loop: true,\r\n          cursorChar: \"|\",\r\n          backDelay: 500,\r\n        };\r\n        this.typed = new Typed(\".name\", options);\r\n      }\r\n    componentWillUnmount() {\r\n        this.typed.destroy();\r\n      }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className={classes.container}>\r\n                <Grid container className={classes.nameContainer} align={'center'} alignItems={\"center\"}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h1\">\r\n                            <div className={classes.nameBody}>\r\n                                <span className=\"name\"/>\r\n                            </div>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Typing);","import React from \"react\";\r\nimport { Grid, Typography, withStyles } from \"@material-ui/core\"\r\n\r\nconst imagePath = process.env.PUBLIC_URL + \"/images/profile.png\";\r\n\r\nconst styles = themes => ({\r\n    profilePic: {\r\n        width: \"20em\",\r\n        height: \"auto\",\r\n        borderRadius: \"50%\"\r\n    },\r\n    paragraph: {\r\n        fontWeight: \"normal\",\r\n        paddingTop: \"4%\",\r\n    },\r\n    container: {\r\n        paddingTop: \"3%\",\r\n    }\r\n});\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <Grid container className={classes.container}>\r\n                <Grid item xs={1} md={1} >\r\n                </Grid>\r\n                <Grid item md={5} align={\"center\"} xs={12} >\r\n                    <img src={imagePath} alt={\"profile\"} className={classes.profilePic} />\r\n                </Grid>\r\n                <Grid item md={3} align={\"center\"} xs={12}>\r\n                    <Typography variant={\"h2\"}>\r\n                        About me\r\n                    </Typography>\r\n                    <Typography variant={\"h6\"} className={classes.paragraph}>\r\n                        Hey there! I'm a Electrical Engineering sopohmore at UCLA's Henry Samueli School of Engineering. My interests are always evolving, so \r\n                        I chose to study EE as I wanted to be in a field with tons of flexibility. Here, I hope to showcase some projects I've worked on. Thanks\r\n                        for stopping by!\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item md={1} xs={1} >\r\n\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(About);","import React from 'react';\nimport './App.css';\nimport { Grid, withStyles, Paper, Typography, Link } from \"@material-ui/core\";\nimport Header from './components/Header';\nimport Typing from './components/Typing';\nimport About from './components/About'\n\nconst styles = theme => ({\n  root: {\n    height: \"100%\",\n    widht: \"100%\",\n    position: \"fixed\",\n    overflowY: \"auto\",\n  },\n  copyright: {\n    paddingTop: \"2.5%\",\n  }\n});\n\nfunction Copyright() {\n  return (\n    <div>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Kenson Nguyen\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n    </div>\n    \n  );\n}\n\nclass App extends React.Component {\n  render() {\n    const {classes} = this.props;\n    return (\n    <Paper className={classes.root} square={true}>\n        <Grid container direction={'row'}>\n          <Grid item xs={12}>\n            <Header />\n          </Grid>\n          <Grid item xs={12}>\n            <Typing />\n          </Grid>\n          <Grid item xs={12}>\n            <About />\n          </Grid>\n        </Grid>\n        <div className={classes.copyright}>\n           <Copyright/>\n        </div>\n    </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, ThemeProvider} from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n        <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}